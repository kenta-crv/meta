- set_meta_tags noindex: true
br
table.header-table.space
  tr
    th[rowspan="2"]
      - if @prev_customer&.id
        = link_to "前へ", customer_path(id: @prev_customer.id, q: params[:q]&.permit!, last_call: params[:last_call]&.permit!), class:"prev btn btn-success"
    th[rowspan="2"]
      - if @next_customer&.id
        = link_to "次へ", customer_path(id: @next_customer.id, q: params[:q]&.permit!, last_call: params[:last_call]&.permit!), class:"prev btn btn-success"

table.company[width="90%"]
    col[width="20%"]
    col[width="30%"]
    col[width="20%"]
    col[width="30%"]
    tbody
      tr
        th
          | 会社名
        td
          =@customer.company
        th
          | メールアドレス
        td
          =@customer.mail
      tr
        th
          | 担当者
        td
          =@customer.name
        th
          | 業種
        td
          =@customer.industry
      tr
        th
          | 電話番号
        td
          =@customer.tel
        th
          | 携帯番号
        td
          =@customer.mobile
      tr
        th
          | 郵便番号
        td
          | 〒
          =@customer.postnumber
        th
          | 住所
        td
          =@customer.address
      tr
        th
          | URL
        td
          =@customer.url
        th
          | 過去アポ利用履歴
        td
          =@customer.history
      tr
        th
          | 取引商品
        td
          =@customer.item
        th
          | 希望オプション
        td
          =@customer.option
      tr
        th
          | ターゲットエリア
        td
          =@customer.area
        th
          | ターゲット業種
        td
          =@customer.target
      tr
        th
          | 料金
        td
          =@customer.price
          | 円
        th
          | 件数
        td
          =@customer.number
          | 件
      tr
        th
          | 希望開始時期
        td
          =@customer.start
        th
          | 次回営業日
        td
          =@customer.next
      tr
        th
          | 備考
        td[colspan="4"]
          =@customer.content


= form_for ([@customer, @customer.calls.build]) do |f|
table.company
        tbody
          tr
            th[colspan="4"]
              | 情報入力
          tr
            th
              | ステータス
            td
              = f.select(:statu, Call.StatuItems)
            th
              | 再コール日時
            td
              = f.datetime_field :time
          tr
            th
              | コメント
            td.comment[colspan="4"]
              = f.text_area :comment
          tr
            th[colspan="4"]
              = f.submit
table.company[width="100%"]
    col[width="15%"]
    col[width="10%"]
    col[width="15%"]
    col[width="15%"]
    col[width="25%"]
    col[width="10%"]
    col[width="10%"]
    - if @customer.calls.any?
      tr
        th
          | 日時
        th
          | 担当者
        th
          | ステータス
        th
          | 次回連絡日
        th
          | コメント
        th
          | 削除
      tr
        - @customer.calls.includes([:admin, :user]).each do |call|
          td
            = call.created_at
          td
            = call.admin&.user_name
            = call.user&.user_name
          td
            = call.statu
          td
            = call.time
          td
            = call.comment
          td
            = link_to '編集', edit_customer_call_path(@customer, call), class: 'command'
            = link_to '削除',customer_call_path(@customer, call) ,method: :delete,class: 'command',data: { confirm: '本当に削除しますか？'}
script
  |  $(function() { // 前回選択時の発信先を初期設定する for (var cookie of document.cookie.split(';')) { var keyValue = cookie.split('='); if (keyValue[0] == 'token') { $('select#token').val(keyValue[1]); } } $('a.prev,a.next').on('click', function(event) { var href = $(this).prop('href'); var s = href.split('?'); var url = s[0] + '/' + $('input#check-auto-call').prop('checked'); if (s.length > 1) { url += '?' + s[1]; } $(this).prop('href', url); }); // 発信要求送信先端末選択時のイベント $('select#token').on('change', function(event) { // 「発信」「保留」「切断」ボタンの使用可否を制御 var token = $(this).find('option:selected').val(); var isNotSelected = (token == ''); $(':button#button-call,:button#button-hang-up,input#check-auto-call').prop('disabled', isNotSelected); // 選択したトークンをCookieに保存 if (!isNotSelected) { document.cookie = 'token=' + token + ';max-age=' + (60 * 60 * 24 * 30); } }).triggerHandler('change'); // 「発信」ボタンクリック時のイベント $(':button#button-call').on('click', function(event) { // トークンを取得 var token = $('select#token').children(':selected').val(); // 電話番号を取得 var telephone = $(this).data('number').replace(/-/g, ''); // Push通知を送信 $.ajax({ type: 'post', url: 'https://fcm.googleapis.com/fcm/send', headers: { Authorization: 'key=AAAAeBZ_DsA:APA91bHFa3RIOMEUyj-lYVOjU6AF60NZRxWkJZXvOSVZw8tUTYq2Rvb7a4CvUOV3XGi_Oc0ZS7HptHhXPeozTnlt1zaunIUXgwEJ6j3bYpVsQ10tHg9SqKUYnZLhVtBkGb1X0tvyxG8S' }, contentType: 'application/json', data: JSON.stringify({ "to": token, "priority": "high", "time_to_live": 1, "data": { "telephone": telephone.replace(/-/g, ''), "date": new Date().getTime() } }), }) .done((data, textStatus, jqXHR) => { if (data.failure > 0) { alert('発信先の端末が無効です。\n正しい端末が登録されているかご確認ください。\n\nエラー内容：' + data.results[0].error); } else { // nop } console.log('done', jqXHR.status); }) .fail((jqXHR, textStatus, errorThrown) => { alert('発信時にエラーが発生しました。\nシステム管理者にお問い合わせください。\n\nエラーコード：' + jqXHR.status); console.log('fail', jqXHR.status); }) .always(() => { // nop }); }); // 自動発信を行うかどうか if (<ruby code="= @is_auto_call"></ruby>) { $(':button#button-call').triggerHandler('click'); } });
